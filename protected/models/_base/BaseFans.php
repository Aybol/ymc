<?php

/**
 * This is the model base class for the table "fans".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Fans".
 *
 * Columns in table "fans" available as properties of the model,
 * followed by relations of table "fans" available as properties of the model.
 *
 * @property integer $id
 * @property string $gender
 * @property integer $concert_per_year
 * @property integer $tracks_per_year
 *
 * @property Genres[] $genres
 * @property Users $id0
 */
abstract class BaseFans extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'fans';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Fans|Fans', $n);
	}

	public static function representingColumn() {
		return 'gender';
	}

	public function rules() {
		return array(
			array('id, gender, concert_per_year, tracks_per_year', 'required'),
			array('id, concert_per_year, tracks_per_year', 'numerical', 'integerOnly'=>true),
			array('gender', 'length', 'max'=>10),
			array('id, gender, concert_per_year, tracks_per_year', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'genres' => array(self::MANY_MANY, 'Genres', 'fan_genres(fan_id, genre_id)'),
			'user' => array(self::BELONGS_TO, 'User', 'id'),
		);
	}

	public function pivotModels() {
		return array(
			'genres' => 'FanGenres',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => null,
			'gender' => Yii::t('app', 'Gender'),
			'concert_per_year' => Yii::t('app', 'Concert Per Year'),
			'tracks_per_year' => Yii::t('app', 'Tracks Per Year'),
			'genres' => null,
			'id0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('gender', $this->gender, true);
		$criteria->compare('concert_per_year', $this->concert_per_year);
		$criteria->compare('tracks_per_year', $this->tracks_per_year);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}