<?php

/**
 * This is the model base class for the table "artists".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Artists".
 *
 * Columns in table "artists" available as properties of the model,
 * followed by relations of table "artists" available as properties of the model.
 *
 * @property integer $id
 * @property integer $country_id
 * @property string $city
 * @property string $state
 * @property string $artist_leader
 * @property string $name
 * @property string $bio
 * @property string $website
 * @property string $fans_count
 * @property string $facebook
 * @property string $twitter
 * @property string $youtube
 *
 * @property Genres[] $genres
 * @property Users $id0
 * @property Countries $country
 */
abstract class BaseArtists extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'artists';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Artists|Artists', $n);
	}

	public static function representingColumn() {
		return 'city';
	}

	public function rules() {
		return array(
			array('id, country_id, city, artist_leader, name, bio, fans_count', 'required'),
			array('id, country_id', 'numerical', 'integerOnly'=>true),
			array('city, state, fans_count', 'length', 'max'=>50),
			array('artist_leader', 'length', 'max'=>10),
			array('name, facebook, twitter, youtube', 'length', 'max'=>100),
			array('website', 'safe'),
			array('state, website, facebook, twitter, youtube', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, country_id, city, state, artist_leader, name, bio, website, fans_count, facebook, twitter, youtube', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'genres' => array(self::MANY_MANY, 'Genres', 'artist_genres(artist_id, genre_id)'),
			'user' => array(self::BELONGS_TO, 'User', 'id'),
			'country' => array(self::BELONGS_TO, 'Country', 'country_id'),
		);
	}

	public function pivotModels() {
		return array(
			'genres' => 'ArtistGenres',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => null,
			'country_id' => null,
			'city' => Yii::t('app', 'City'),
			'state' => Yii::t('app', 'State'),
			'artist_leader' => Yii::t('app', 'Artist Leader'),
			'name' => Yii::t('app', 'Name'),
			'bio' => Yii::t('app', 'Bio'),
			'website' => Yii::t('app', 'Website'),
			'fans_count' => Yii::t('app', 'Fans Count'),
			'facebook' => Yii::t('app', 'Facebook'),
			'twitter' => Yii::t('app', 'Twitter'),
			'youtube' => Yii::t('app', 'Youtube'),
			'genres' => null,
			'id0' => null,
			'country' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('country_id', $this->country_id);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('state', $this->state, true);
		$criteria->compare('artist_leader', $this->artist_leader, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('bio', $this->bio, true);
		$criteria->compare('website', $this->website, true);
		$criteria->compare('fans_count', $this->fans_count, true);
		$criteria->compare('facebook', $this->facebook, true);
		$criteria->compare('twitter', $this->twitter, true);
		$criteria->compare('youtube', $this->youtube, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}